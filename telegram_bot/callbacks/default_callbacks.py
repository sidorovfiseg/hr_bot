from telegram_bot.routers.default_routers import default_router as router
from telegram_bot.states.user_state import UserState
from aiogram import types
from aiogram import F
from aiogram.fsm.context import FSMContext
from telegram_bot.keyboards.menu import menu_kb



# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Ö–æ–∂–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤

@router.callback_query(F.data == "download_file", UserState.menu_state)
async def handle_download(callback : types.CallbackQuery, state: FSMContext):
    await callback.message.answer(text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –¥–ª—è –¥–æ–æ–±—É—á–µ–Ω–∏—è üìÑ")
    await state.set_state(UserState.download_state)
    await callback.answer()

@router.callback_query(F.data == "return")
async def handle_return(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(UserState.menu_state)
    await callback.message.answer(text="–ü—Ä–∏–≤–µ—Ç üñêÔ∏è. –¢—ã –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å –º–Ω–µ –æ–±—É—á–µ–Ω–∏–µ–º, –¥–æ–±–∞–≤–∏–≤ —Å–≤–æ–π —Ñ–∞–π–ª, –∏–ª–∏ —è –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å", \
        reply_markup=menu_kb)
    await callback.answer()


@router.callback_query(F.data == "restart")
async def handle_new_question(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.answer(text="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å, —è –ø–æ–º–æ–≥—É –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üßê")
    await state.set_state(UserState.answer_state)
    await callback.answer()
  
    
# @router.callback_query(F.data == "similar_quest")
# async def handle_sim_questions(callback: types.CallbackQuery, state: FSMContext):
    
    # df_question = df['QUESTION'].to_list()

    # kb = [[types.KeyboardButton(text=question)] for question in df_question]
    # sq_kb = types.ReplyKeyboardMarkup(
    #         keyboard=kb,
    #         resize_keyboard=True,
    #         is_persistent=True,
    #         input_field_placeholder = "–ü–æ—Ö–æ–∂–∏–µ –≤–æ–ø—Ä–æ—Å—ã"
    #     )
    
    #await callback.message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Ö–æ–∂–∏–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π", reply_markup=sq_kb)
    

    

@router.callback_query(F.data == "ask_question")
async def handle_ask_question(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.answer(text="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å, —è –ø–æ–º–æ–≥—É –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üßê")
    await state.set_state(UserState.answer_state)
    await callback.answer()